<template>
  <view hidden="{{championList.length === 0}}" class="HomeChampionCard" @tap="closeSelector">
    <view class="table HomeChampionCard-table">
      <div class="tr HomeChampionCard-head">
        <div class="th">
          球队
        </div>
        <div class="th">
          赔率
        </div>
        <div class="th">
          夺冠概率
        </div>
        <div class="th">
          历史最佳
        </div>
        <div class="th">
          主力球星
        </div>
      </div>
      <repeat for="{{championList}}">
        <div
          class="tr HomeChampionCard-item"
          :class="{is-selected: item.selected}"
          @tap="handleSelectChampion({{item.id}}, {{item.odds}}, {{item}})"
        >
          <div class="td HomeChampionCard-logoCtn">
            <image
              class="HomeChampionCard-logo"
              src="{{item.logo}}"
            />
            {{item.team}}
          </div>
          <div class="td HomeChampionCard-odds">{{item.odds}}</div>
          <div class="td HomeChampionCard-rate">{{item.rate}}</div>
          <div class="td HomeChampionCard-championNum">{{item.champion_num}}</div>
          <div class="td HomeChampionCard-star">
            {{item.starName}}
            <span>{{item.starTeam}}</span>
          </div>
        </div>
      </repeat>
    </view>
    <view
      wx:if="{{selectedChampion.length > 0}}"
      class="HomeChampionCard-earnings"
    >
      预测奖金：{{earnings}}{{moneyType === 1 ? '金币' : '蓝钻'}}
    </view>
    <view class="HomeChampionCard-tips">
      页面中的赔率仅供参考，实际赔率以最终赔率为准
    </view>
    <view class="HomeChampionCard-betBar">
      <view class="HomeChampionCard-menuCtn" @tap.stop="expandGoldRangeMenu">
        {{goldRange[selectedGold]}}
        <image class="HomeChampionCard-moreIcon" src="../img/00-gengduofuhao.png" />
        <view
          class="HomeChampionCard-menu"
          hidden="{{hideGoldRange}}"
          @tap.stop="handlePickerChange"
        >
          <repeat for="{{goldRange}}" item="item" index="index" key="index">
            <view
              class="HomeChampionCard-menuItem"
              :class="{is-selected: selectedGold === index}"
              data-index="{{index}}"
            >
              {{item}}
            </view>
          </repeat>
        </view>
      </view>
      <view wx:if="{{userInfo.type == 2}}" class="HomeChampionCard-menuCtn" @tap.stop="expandMoneyTypeMenu">
        {{moneyType === 1 ? '金币' : '蓝钻'}}
        <image class="HomeChampionCard-moreIcon" src="../img/00-gengduofuhao.png" />
        <view
          class="HomeChampionCard-menu"
          hidden="{{hideMoneyType}}"
        >
          <view
            class="HomeChampionCard-menuItem"
            :class="{'is-selected': moneyType === 1}"
            @tap.stop="handleSwitchType(1)"
          >
            金币
          </view>
          <view
            class="HomeChampionCard-menuItem"
            :class="{'is-selected': moneyType === 2}"
            @tap.stop="handleSwitchType(2)"
          >
            蓝钻
          </view>
        </view>
      </view>
      <view wx:else class="HomeChampionCard-coinType">
        金币
      </view>
      <form class="HomeChampionCard-betBtnCtn" @submit="handleBet" report-submit="true">
        <button
          class="HomeChampionCard-betBtn"
          formType="submit"
          disabled="{{!selectedChampion.length}}"
        >
          <span wx:if="{{selectedChampion.length}}">
            立即使用{{gold * selectedChampion.length}}{{moneyType === 1 ? '金币' : '蓝钻'}}
          </span>
          <span wx:else>
            请至少选择一只球队
          </span>
        </button>
      </form>
    </view>
  </view>
</template>

<style lang="scss" scoped>
@import '../base/cssBase/table.scss';
@import '../base/cssBase/index.scss';
.HomeChampionCard {
  background-color: $primary;
  border-top: 4rpx solid $secondary;
  padding-bottom: 24rpx;

  &-table {
    font-size: 26rpx;
    color: $text-secondary;
  }

  &-head {
    border-bottom: 2rpx solid rgba(218, 29, 30, 0.2);
    height: 50rpx;
  }

  &-item {
    color: rgb(173, 61, 39);
    border-bottom: 2rpx solid rgba(218, 29, 30, 0.2);
    padding: 5px 0;
  }

  &-star {
    display: flex;
    flex-direction: column;
    align-items: center;
    span {
      font-size: 20rpx;
    }
  }

  &-logoCtn {
    display: flex;
    flex-direction: column;
    align-items: center;
    color: $text-secondary;
  }

  &-logo {
    width: 60rpx;
    height: 60rpx;
  }

  &-championNum {
    color: $red;
  }

  &-item.is-selected {
    background-color: rgb(240, 230, 163);
  }

  &-betBar {
    display: flex;
    align-items: center;
  }

  &-earnings {
    color: rgb(230, 0, 18);
    font-size: 30rpx;
    text-align: center;
    margin: 5px 0;
  }

  &-tips {
    font-size: 24rpx;
    color: rgb(166, 154, 154);
    text-align: center;
    margin: 5px 0;
  }

  &-coinType {
    color: rgb(77, 77, 77);
    font-size: 26rpx;
    height: 64rpx;
    line-height: 64rpx;
    margin-right: 6px;
  }

  &-menuCtn {
    position: relative;
    color: rgb(77, 77, 77);
    font-size: 26rpx;
    border: 4rpx solid $secondary;
    border-radius: 8rpx;
    box-sizing: border-box;
    height: 64rpx;
    width: 160rpx;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 6px;
  }

  &-menu{
    position: absolute;
    z-index: 3;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: $primary;
    color: rgb(77, 77, 77);
  }

  &-menuItem {
    height: 64rpx;
    line-height: 64rpx;
    width: 160rpx;
    display: block;
    border: 4rpx solid $secondary;
    border-bottom: 0;
    box-sizing: border-box;
    text-align: center;
    padding: 0 20rpx;
  }

  &-menuItem.is-selected {
    background-color: $red;
    color: $text-primary;
  }

  &-moreIcon {
    width: 12rpx;
    height: 21rpx;
    transform: rotate(-90deg);
    margin-left: 15px;
  }

  &-betBtnCtn {
    flex: 1;
  }

  &-betBtn {
    background-color: $red;
    font-size: 30rpx;
    color: $text-primary;
    height: 64rpx;
    line-height: 64rpx;
    border-radius: 8rpx;
  }
}
</style>

<script>
import wepy from 'wepy'
import { connect } from 'wepy-redux'
import {
  updateChampionList,
  updateBetSelected
} from '@/store/actions'
import { USER_TYPE, MONEY_TYPE } from '@/utils/const'

@connect({
  championList (state) {
    return state.champion.list.slice(0, 2)
  },
  userInfo (state) {
    return state.user.info
  }
}, {
  updateChampionList,
  updateBetSelected
})

export default class HomeChampionCard extends wepy.component {
  props = {
  }

  components = {
  }

  mixins = []

  data = {
    selectedChampion: [],
    gold: 100,
    goldRange: [100, 200, 500],
    selectedGold: 0,
    hideGoldRange: true,
    hideMoneyType: true,
    betType: 'jcgj',
    moneyType: MONEY_TYPE.COIN
  }

  computed = {
    earnings() {
      const coin = this.gold
      let max = 0
      let min = Infinity
      this.selectedChampion.forEach(item => {
        const earn = Math.floor(coin * item.odds)
        if (earn < min) {
          min = earn
        }
        if (earn > max) {
          max = earn
        }
      })
      if (this.selectedChampion.length === 0) {
        return ''
      } else if (min === max) {
        return min
      }
      return `${min} - ${max}`
    }
  }

  watch = {
    userInfo(newValue) {
      if (newValue && newValue.id && newValue.type === USER_TYPE.BLUE_DIAMOND && this.moneyType !== MONEY_TYPE.BLUE_DIAMOND) {
        this.moneyType = MONEY_TYPE.BLUE_DIAMOND
        this.goldRange = [10, 50, 100]
        this.gold = 10
      }
    }
  }

  methods = {
    handleSelectChampion(id, odds, match) {
      const option = {
        id,
        odds,
        match
      }

      const index = this.selectedChampion.findIndex(item => {
        return item.id === option.id
      })
      if (index !== -1) {
        this.selectedChampion.splice(index, 1)
        this.methods.updateChampionList({
          id: option.id,
          data: { selected: false }
        })
      } else {
        this.selectedChampion = [...this.selectedChampion, option]
        this.methods.updateChampionList({
          id: option.id,
          data: { selected: true }
        })
      }
    },
    handlePickerChange(e) {
      this.selectedGold = e.target.dataset.index
      this.gold = this.goldRange[this.selectedGold]
      this.hideGoldRange = true
    },
    handleBet() {
      this.methods.updateBetSelected({
        selected: this.selectedChampion,
        betCoins: this.gold * this.selectedChampion.length,
        betType: 'jcgj',
        betMoneyType: this.moneyType,
        showBetConfirm: true
      })
    },
    handleSwitchType(moneyType) {
      this.moneyType = Number.parseInt(moneyType, 10)
      if (this.moneyType === MONEY_TYPE.BLUE_DIAMOND) {
        this.goldRange = [10, 50, 100]
        this.gold = 10
      } else if (this.moneyType === MONEY_TYPE.COIN) {
        this.goldRange = [100, 200, 500]
        this.gold = 100
      }
      this.selectedGold = 0
      this.hideMoneyType = true
    },
    expandGoldRangeMenu() {
      this.hideGoldRange = false
    },
    expandMoneyTypeMenu() {
      this.hideMoneyType = false
    },
    closeSelector() {
      this.hideGoldRange = true
      this.hideMoneyType = true
    }
  }

  onLoad() {
    if (this.userInfo.id && this.userInfo.type === USER_TYPE.BLUE_DIAMOND) {
      this.moneyType = MONEY_TYPE.BLUE_DIAMOND
      this.goldRange = [10, 50, 100]
      this.gold = 10
    }
  }
}
</script>
